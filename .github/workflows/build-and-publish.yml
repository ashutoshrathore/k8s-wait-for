name: Build and Deploy

on:
  push:
    branches: [ "master"]
    # Publish semver tags as releases.
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "master"]
  workflow_dispatch:
    inputs: {}

env:
  TARGET: linux/arm64,linux/amd64
  BUILD_FLAGS: --no-cache

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Build the Docker images
        run: make images
  scan:
    needs: [ "build" ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Build the Docker image for Trivy
        env:
            # amd build so that local 'docker images' can access images
            TARGET: linux/amd64
            BUILD_FLAGS: --load --no-cache
        run: make images
      - name: Retrieve version
        run: |
          echo "::set-output name=ROOT_IMAGE_ID::$(docker images  --filter=reference="*/*:v*${GITHUB_SHA::7}" --format '{{.ID}}')"
          echo "::set-output name=NON_ROOT_IMAGE_ID::$(docker images  --filter=reference="*/*:no-root-v*${GITHUB_SHA::7}" --format '{{.ID}}')"
        id: image_id
      - name: Run Trivy Vulnerability Scanner for Root Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ steps.image_id.outputs.ROOT_IMAGE_ID }}'
          exit-code: 1
          format: 'sarif'
          output: 'trivy-results-root.sarif'
      - name: Run Trivy Vulnerability Scanner for Non-Root Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ steps.image_id.outputs.NON_ROOT_IMAGE_ID }}'
          exit-code: 1
          format: 'sarif'
          output: 'trivy-results-non-root.sarif'
      # just upload root scan results
      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-root.sarif'

  deploy:
    needs: [ "scan" ]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - run: make push
